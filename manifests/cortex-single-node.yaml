apiVersion: v1
kind: ConfigMap
metadata:
  name: cortex-config
  labels:
    app: cortex
data:
  config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 9009

      # Configure the server to allow messages up to 100MB.
      grpc_server_max_recv_msg_size: 104857600
      grpc_server_max_send_msg_size: 104857600
      grpc_server_max_concurrent_streams: 1000

    distributor:
      shard_by_all_labels: true
      pool:
        health_check_ingesters: true

    ingester_client:
      grpc_client_config:
        # Configure the client to allow messages up to 100MB.
        max_recv_msg_size: 104857600
        max_send_msg_size: 104857600
        grpc_compression: gzip

    ingester:
      lifecycler:
        # The address to advertise for this ingester.  Will be autodiscovered by
        # looking up address on eth0 or en0; can be specified if this fails.
        # address: 127.0.0.1

        # We want to start immediately and flush on shutdown.
        join_after: 0
        min_ready_duration: 0s
        final_sleep: 0s
        num_tokens: 512

        # Use an in memory ring store, so we don't need to launch a Consul.
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1

    storage:
      engine: blocks

    blocks_storage:
      tsdb:
        dir: /tmp/cortex/tsdb

      bucket_store:
        sync_dir: /tmp/cortex/tsdb-sync

      backend: filesystem
      filesystem:
        dir: /tmp/longterm/tsdb

    compactor:
      data_dir: /tmp/cortex/compactor
      sharding_ring:
        kvstore:
          store: inmemory

    frontend_worker:
      match_max_concurrent: true

    ruler:
      enable_api: true
      enable_sharding: false

    ruler_storage:
      backend: local
      local:
        directory: /tmp/cortex/rules

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cortex
  labels:
    app: cortex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cortex
  template:
    metadata:
      labels:
        app: cortex
    spec:
      containers:
      - name: cortex
        image: cortexproject/cortex:v1.11.1
        args:
        - -config.file=/var/cortex/config.yaml
        volumeMounts:
        - mountPath: /var/cortex
          name: config
      volumes:
      - name: config
        configMap:
          name: cortex-config
      securityContext:
        runAsUser: 0
        runAsGroup: 0
---
apiVersion: v1
kind: Service
metadata:
  name: cortex-svc
  labels:
    app: cortex
spec:
  selector:
    app: cortex
  type: ClusterIP
  ports:
  - port: 9009
    targetPort: 9009
    protocol: TCP

